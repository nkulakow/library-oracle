CREATE OR REPLACE PACKAGE VALIDATE_DATA AS
    FUNCTION CHECK_BOOK_EXISTS(
        V_BOOK_ID BOOKS.BOOK_ID%TYPE
    ) RETURN BOOLEAN;
    FUNCTION CHECK_USER_EXISTS(
        V_USER_ID USERS.USER_ID%TYPE
    ) RETURN BOOLEAN;
    FUNCTION CHECK_BOOK_AVAILABLE(
        V_BOOK_ID BOOKS.BOOK_ID%TYPE
    ) RETURN BOOLEAN;
    INVALID_BOOK_ID EXCEPTION;
    PRAGMA EXCEPTION_INIT(INVALID_BOOK_ID, -20003);
    INVALID_USER_ID EXCEPTION;
    PRAGMA EXCEPTION_INIT(INVALID_USER_ID, -20002);
    NO_ORDER_FOUND EXCEPTION;
    PRAGMA EXCEPTION_INIT(NO_ORDER_FOUND, -20004);
    BOOK_UNAVAILABLE EXCEPTION;
    PRAGMA EXCEPTION_INIT(BOOK_UNAVAILABLE, -20005);
END VALIDATE_DATA;
/

CREATE OR REPLACE PACKAGE BODY VALIDATE_DATA AS
    FUNCTION CHECK_BOOK_EXISTS(
        V_BOOK_ID BOOKS.BOOK_ID%TYPE
    ) RETURN BOOLEAN AS
        BOOK_EXISTS BOOLEAN:=FALSE;
    BEGIN
        FOR MATCHING_BOOK_ID IN (
            SELECT
                BOOK_ID
            FROM
                BOOKS
            WHERE
                BOOK_ID = V_BOOK_ID
        ) LOOP
            IF V_BOOK_ID = MATCHING_BOOK_ID.BOOK_ID THEN
                BOOK_EXISTS := TRUE;
            END IF;
            EXIT;
        END LOOP;
        RETURN BOOK_EXISTS;
    END CHECK_BOOK_EXISTS;
    FUNCTION CHECK_USER_EXISTS(
        V_USER_ID USERS.USER_ID%TYPE
    ) RETURN BOOLEAN AS
        USER_EXISTS BOOLEAN:=FALSE;
    BEGIN
        FOR MATCHING_USER_ID IN (
            SELECT
                USER_ID
            FROM
                USERS
            WHERE
                USER_ID = V_USER_ID
        ) LOOP
            IF V_USER_ID = MATCHING_USER_ID.USER_ID THEN
                USER_EXISTS:=TRUE;
            END IF;
            EXIT;
        END LOOP;
        RETURN USER_EXISTS;
    END CHECK_USER_EXISTS;
    FUNCTION CHECK_BOOK_AVAILABLE(
        V_BOOK_ID BOOKS.BOOK_ID%TYPE
    ) RETURN BOOLEAN AS
        BOOK_AVAILABLE BOOLEAN:=TRUE;
    BEGIN
        FOR BORROWED_BOOK_ID IN (
            SELECT
                BOOK_ID
            FROM
                BORROWED
            WHERE
                BOOK_ID = V_BOOK_ID
        ) LOOP
            IF V_BOOK_ID = BORROWED_BOOK_ID.BOOK_ID THEN
                BOOK_AVAILABLE:=FALSE;
            END IF;
            EXIT;
        END LOOP;
        RETURN BOOK_AVAILABLE;
    END CHECK_BOOK_AVAILABLE;
END VALIDATE_DATA;